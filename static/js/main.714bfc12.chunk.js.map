{"version":3,"sources":["logo.svg","Module.js","modules/ClockDigitalModule/ClockDigitalModule.js","modules/ClockAnalogModule/ClockAnalogModule.js","modules/F1NextRaceModule/F1NextRaceModule.js","modules/RocketPassModule/RocketPassModule.js","modules/CountDownModule/CountDownModule.js","modules/NfsCountDownModule/NfsCountDownModule.js","Grid.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Module","props","handleClick","bind","id","onClick","this","React","Component","width","height","ClockDigitalModule","state","date","Date","timerID","setInterval","tick","clearInterval","setState","viewBox","x","y","dominantBaseline","textAnchor","fontSize","fontFamily","fill","toLocaleTimeString","replace","ClockAnalogModule","second","getSeconds","minute","getMinutes","hour","getHours","hourHand","minuteHand","secondHand","Math","cos","PI","sin","className","x1","y1","x2","y2","strokeLinecap","F1NextRaceModule","timeLeft","raceName","raceLocation","updateNextRaceDate","updateTimeLeft","number","$","getJSON","data","dateStr","timeStr","dateTime","location","now","diffMs","diffDays","ceil","diffH","floor","minutes","seconds","padNumber","fontWeight","xlinkHref","RocketPassModule","start","finish","console","log","progress","style","stroke","strokeWidth","CountDownModule","diffWeeks","title","NfsCountDownModule","preserveAspectRatio","Grid","modules","addModule","targetLevel","moduleType","createElement","forceUpdate","grid","i","forEach","index","rows","row","push","colSpan","rowSpan","undefined","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.714bfc12.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport './css/Module.css';\r\n\r\nclass Module extends React.Component {\r\n\r\n    static width = 1;\r\n    static height = 1;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"module\" onClick={this.handleClick}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Module;\r\n","import React from 'react';\r\nimport Module from './../../Module';\r\nimport './ClockDigitalModule.css';\r\n\r\nclass ClockDigitalModule extends Module {\r\n\r\n    static width = 2;\r\n    static height = 1;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {date: new Date()};\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(() => this.tick(),1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    tick() {\r\n        this.setState({date: new Date()});\r\n    }\r\n\r\n    handleClick() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"module\" onClick={this.handleClick}>\r\n                <svg width=\"100%\" viewBox=\"0 0 100 50\">\r\n                  <text x=\"50\" y=\"27\" dominantBaseline=\"middle\" textAnchor=\"middle\" fontSize=\"25\" fontFamily=\"Segment7Standard\" fill=\"lime\">{this.state.date.toLocaleTimeString('hu-HU').replace(/:/g, '.')}</text>\r\n                </svg>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClockDigitalModule;\r\n","import React from 'react';\r\nimport Module from './../../Module';\r\nimport './ClockAnalogModule.css';\r\n\r\nclass ClockAnalogModule extends Module {\r\n\r\n    static width = 2;\r\n    static height = 2;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {date: new Date()};\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(() => this.tick(),1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    tick() {\r\n        this.setState({date: new Date()});\r\n    }\r\n\r\n    handleClick() {\r\n    }\r\n\r\n    render() {\r\n        let second = this.state.date.getSeconds();\r\n        let minute = this.state.date.getMinutes()+second/60.0;\r\n        let hour = this.state.date.getHours()+minute/60.0;\r\n        let hourHand = {};\r\n        let minuteHand = {};\r\n        let secondHand = {};\r\n        hourHand.x = Math.cos((hour%12)/12.0*2*Math.PI-Math.PI/2);\r\n        hourHand.y = Math.sin((hour%12)/12.0*2*Math.PI-Math.PI/2);\r\n        minuteHand.x = Math.cos((minute)/60.0*2*Math.PI-Math.PI/2);\r\n        minuteHand.y = Math.sin((minute)/60.0*2*Math.PI-Math.PI/2);\r\n        secondHand.x = Math.cos((second)/60.0*2*Math.PI-Math.PI/2);\r\n        secondHand.y = Math.sin((second)/60.0*2*Math.PI-Math.PI/2);\r\n\r\n        return (\r\n            <div id=\"module\" onClick={this.handleClick}>\r\n                <svg width=\"100%\" viewBox=\"0 0 50 50\">\r\n                    <line className=\"clockDigitalModuleHour\" x1=\"25\" y1=\"25\" x2={hourHand.x*15+25} y2={hourHand.y*15+25} strokeLinecap=\"round\"/>\r\n                    <line className=\"clockDigitalModuleMinute\" x1=\"25\" y1=\"25\" x2={minuteHand.x*22+25} y2={minuteHand.y*22+25} strokeLinecap=\"round\"/>\r\n                    <line className=\"clockDigitalModuleSecond\" x1=\"25\" y1=\"25\" x2={secondHand.x*25+25} y2={secondHand.y*25+25} strokeLinecap=\"round\"/>\r\n                </svg>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClockAnalogModule;\r\n","import React from 'react';\r\nimport $ from 'jquery';\r\nimport Module from './../../Module';\r\nimport './F1NextRaceModule.css';\r\n\r\nclass F1NextRaceModule extends Module {\r\n\r\n    static width = 2;\r\n    static height = 1;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: null,\r\n            timeLeft: 'Loading',\r\n            raceName: '',\r\n            raceLocation: '',\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(() => this.tick(),1000);\r\n        this.updateNextRaceDate();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    tick() {\r\n        this.updateTimeLeft();\r\n    }\r\n\r\n    handleClick() {\r\n    }\r\n\r\n    padNumber(number) {\r\n        if(number < 10) {\r\n            return \"0\" + number;\r\n        }\r\n        return number;\r\n    }\r\n\r\n    updateNextRaceDate() {\r\n        $.getJSON(\"https://ergast.com/api/f1/current/next.json\", (data) => {\r\n            let dateStr = data['MRData']['RaceTable']['Races'][0]['date'];\r\n            let timeStr = data['MRData']['RaceTable']['Races'][0]['time'];\r\n            let dateTime = new Date(dateStr + ' ' + timeStr);\r\n            let raceName = data['MRData']['RaceTable']['Races'][0]['raceName'];\r\n            let location = data['MRData']['RaceTable']['Races'][0]['Circuit']['Location'];\r\n            let raceLocation = location['locality'] + ', ' + location['country'];\r\n            this.setState({date: dateTime, raceName: raceName, raceLocation: raceLocation}, this.updateTimeLeft);\r\n        });\r\n    }\r\n\r\n    updateTimeLeft() {\r\n        let timeLeft = '';\r\n        let now = new Date();\r\n        let diffMs = this.state.date - now;\r\n        let diffDays = Math.ceil(diffMs / 1000 / 60 / 60 / 24);\r\n        if(diffDays > 0) {\r\n            timeLeft = diffDays + (diffDays>1?' days':' day');\r\n        } else if(diffDays >= 0) {\r\n            let diffH = Math.floor(diffMs / 1000 / 60 / 60);\r\n            let minutes = Math.floor((diffMs / 1000 / 60)%60);\r\n            let seconds = Math.ceil((diffMs / 1000)%60);\r\n            timeLeft = this.padNumber(diffH) + ':' + this.padNumber(minutes) + ':' + this.padNumber(seconds);\r\n        } else {\r\n            timeLeft= 'Started';\r\n        }\r\n\r\n        this.setState({timeLeft: timeLeft});\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div id=\"module\" onClick={this.handleClick}>\r\n                <div>\r\n                    <svg width=\"100%\" viewBox=\"0 0 100 50\">\r\n                        <text x=\"50\" y=\"8\" dominantBaseline=\"middle\" textAnchor=\"middle\" fontSize=\"10\" fontWeight=\"bold\" fill=\"white\">{this.state.raceName}</text>\r\n                        <text x=\"50\" y=\"17\" dominantBaseline=\"middle\" textAnchor=\"middle\" fontSize=\"8\" fill=\"white\">{this.state.raceLocation}</text>\r\n                        <image x=\"2\" y=\"25\" height=\"10\" xlinkHref=\"https://www.formula1.com/etc/designs/fom-website/images/f1_logo.svg\"/>\r\n                        <text x=\"70\" y=\"32\" dominantBaseline=\"middle\" textAnchor=\"middle\" fontSize=\"15\" fill=\"white\">{this.state.timeLeft}</text>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default F1NextRaceModule;\r\n","import React from 'react';\r\nimport $ from 'jquery';\r\nimport Module from './../../Module';\r\nimport './RocketPassModule.css';\r\n\r\nclass RocketPassModule extends Module {\r\n\r\n    static width = 2;\r\n    static height = 1;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: new Date(),\r\n            start: new Date('2019-08-28 17:00:00Z'),\r\n            finish: new Date('2019-12-03 17:00:00Z')\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        console.log('foo');\r\n    }\r\n\r\n    render() {\r\n        let progress = (this.state.date - this.state.start)/(this.state.finish - this.state.start);\r\n        return (\r\n            <div id=\"module\">\r\n                <svg width=\"100%\" viewBox=\"0 0 100 50\">\r\n                    <image x=\"2\" y=\"11\" height=\"30\" xlinkHref=\"./Modules/RocketPassModule/rp4_logo.png\" onClick={this.handleClick}/>\r\n                    <text x=\"75\" y=\"13\" dominantBaseline=\"middle\" textAnchor=\"middle\" fontSize=\"18\" fontWeight=\"bold\" fill=\"white\">{Math.ceil(this.props.props['targetLevel']*progress)}</text>\r\n                    <line x1=\"60\" y1=\"25\" x2=\"90\" y2=\"25\" style={({stroke:\"white\", strokeWidth:2})} />\r\n                    <text x=\"75\" y=\"37\" dominantBaseline=\"middle\" textAnchor=\"middle\" fontSize=\"18\" fontWeight=\"bold\" fill=\"white\">{this.props.props['targetLevel']}</text>\r\n                </svg>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RocketPassModule;\r\n","import React from 'react';\r\nimport Module from './../../Module';\r\nimport './CountDownModule.css';\r\n\r\nclass CountDownModule extends Module {\r\n\r\n    static width = 2;\r\n    static height = 1;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timeLeft: 'Loading'\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(() => this.tick(),1000);\r\n        this.updateTimeLeft();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    tick() {\r\n        this.updateTimeLeft();\r\n    }\r\n\r\n    handleClick() {\r\n    }\r\n\r\n    padNumber(number) {\r\n        if(number < 10) {\r\n            return \"0\" + number;\r\n        }\r\n        return number;\r\n    }\r\n\r\n    updateTimeLeft() {\r\n        let timeLeft = '';\r\n        let now = new Date();\r\n        let diffMs = this.props.props.date - now;\r\n        let diffDays = Math.ceil(diffMs / 1000 / 60 / 60 / 24);\r\n        if(diffDays > 0) {\r\n            if(diffDays >= 7) {\r\n                let diffWeeks = Math.ceil(diffDays/7);\r\n                timeLeft = diffWeeks + (diffWeeks>1?' weeks':' week');\r\n            } else {\r\n                timeLeft = diffDays + (diffDays>1?' days':' day');\r\n            }\r\n        } else if(diffMs >= 0) {\r\n            let diffH = Math.floor(diffMs / 1000 / 60 / 60);\r\n            let minutes = Math.floor((diffMs / 1000 / 60)%60);\r\n            let seconds = Math.ceil((diffMs / 1000)%60);\r\n            timeLeft = this.padNumber(diffH) + ':' + this.padNumber(minutes) + ':' + this.padNumber(seconds);\r\n        } else {\r\n            timeLeft= '00:00:00';\r\n        }\r\n        this.setState({timeLeft: timeLeft});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"module\" onClick={this.handleClick}>\r\n                <div>\r\n                    <svg width=\"100%\" viewBox=\"0 0 100 50\">\r\n                        <text x=\"50\" y=\"8\" dominantBaseline=\"middle\" textAnchor=\"middle\" fontSize=\"10\" fontWeight=\"bold\" fill=\"white\">{this.props.props.title}</text>\r\n                        <text x=\"50\" y=\"32\" dominantBaseline=\"middle\" textAnchor=\"middle\" fontSize=\"15\" fill=\"white\">{this.state.timeLeft}</text>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CountDownModule;\r\n","import React from 'react';\r\nimport Module from './../../Module';\r\nimport './NfsCountDownModule.css';\r\n\r\nclass NfsCountDownModule extends Module {\r\n\r\n    static width = 1;\r\n    static height = 2;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timeLeft: 'Loading'\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(() => this.tick(),1000);\r\n        this.updateTimeLeft();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    tick() {\r\n        this.updateTimeLeft();\r\n    }\r\n\r\n    handleClick() {\r\n    }\r\n\r\n    padNumber(number) {\r\n        if(number < 10) {\r\n            return \"0\" + number;\r\n        }\r\n        return number;\r\n    }\r\n\r\n    updateTimeLeft() {\r\n        let timeLeft = '';\r\n        let now = new Date();\r\n        let diffMs = this.props.props.date - now;\r\n        let diffDays = Math.ceil(diffMs / 1000 / 60 / 60 / 24);\r\n        if(diffDays > 0) {\r\n            if(diffDays >= 7) {\r\n                let diffWeeks = Math.ceil(diffDays/7);\r\n                timeLeft = diffWeeks + (diffWeeks>1?' weeks':' week');\r\n            } else {\r\n                timeLeft = diffDays + (diffDays>1?' days':' day');\r\n            }\r\n        } else if(diffMs >= 0) {\r\n            let diffH = Math.floor(diffMs / 1000 / 60 / 60);\r\n            let minutes = Math.floor((diffMs / 1000 / 60)%60);\r\n            let seconds = Math.ceil((diffMs / 1000)%60);\r\n            timeLeft = this.padNumber(diffH) + ':' + this.padNumber(minutes) + ':' + this.padNumber(seconds);\r\n        } else {\r\n            timeLeft= '00:00:00';\r\n        }\r\n        this.setState({timeLeft: timeLeft});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"module\" onClick={this.handleClick}>\r\n                <div>\r\n                    <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 50 100\">\r\n                        <image x=\"0\" y=\"0\" width=\"50\" height=\"100\" preserveAspectRatio=\"none\" xlinkHref=\"./Modules/NfsCountDownModule/nfsBg.png\" onClick={this.handleClick}/>\r\n                        <text x=\"25\" y=\"90\" dominantBaseline=\"middle\" textAnchor=\"middle\" fontSize=\"10\" fill=\"white\">{this.state.timeLeft}</text>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NfsCountDownModule;\r\n","import React from 'react';\r\nimport './css/Grid.css';\r\nimport Module from './Module';\r\nimport ClockDigitalModule from \"./modules/ClockDigitalModule/ClockDigitalModule\";\r\nimport ClockAnalogModule from \"./modules/ClockAnalogModule/ClockAnalogModule\";\r\nimport F1NextRaceModule from \"./modules/F1NextRaceModule/F1NextRaceModule\";\r\nimport RocketPassModule from \"./modules/RocketPassModule/RocketPassModule\";\r\nimport CountDownModule from \"./modules/CountDownModule/CountDownModule\";\r\nimport NfsCountDownModule from \"./modules/NfsCountDownModule/NfsCountDownModule\";\r\n\r\nclass Grid extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            width: 8,\r\n            height: 8,\r\n            modules: []\r\n        };\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.addModule(Module, 0,0);\r\n        this.addModule(ClockDigitalModule, 3,2);\r\n        this.addModule(ClockAnalogModule, 3,0);\r\n        this.addModule(F1NextRaceModule, 1,0);\r\n        this.addModule(RocketPassModule, 1,1, {targetLevel: 250});\r\n        // this.addModule(CountDownModule, 0,3, {title: 'End of Semester', date: new Date('2019-12-13 14:00:00Z')});\r\n        this.addModule(NfsCountDownModule, 5,0, {date: new Date('2019-11-08 18:00:00Z')});\r\n    }\r\n\r\n    addModule(moduleType, x, y, props) {\r\n        let module = {width: moduleType.width, height: moduleType.height, x: x, y: y, props: props};\r\n        module.module = React.createElement(moduleType, module);\r\n\r\n        this.setState((state) => ({\r\n            modules: [...state.modules, module]\r\n        }), () => this.forceUpdate());\r\n\r\n\r\n    }\r\n\r\n\r\n    handleClick() {\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render() {\r\n        let grid = [];\r\n        for (let i = 0; i < this.state.width; i++) {\r\n            grid[i] = [];\r\n        }\r\n\r\n        this.state.modules.forEach((module, index) => {\r\n            for(let x = module.x; x < module.x + module.width; x++) {\r\n               for(let y = module.y; y < module.y + module.height; y++) {\r\n                    grid[x][y] = true;\r\n               }\r\n           }\r\n           grid[module.x][module.y] = module;\r\n        });\r\n\r\n        let rows = [];\r\n        for (let y = 0; y < this.state.height; y++) {\r\n            let row = [];\r\n            for (let x = 0; x < this.state.width; x++) {\r\n                if(typeof grid[x][y] === 'object') {\r\n                    row.push(<td colSpan={grid[x][y].width} rowSpan={grid[x][y].height}>\r\n                            {grid[x][y].module}\r\n                        </td>)\r\n                } else if (grid[x][y] === undefined){\r\n                    row.push(<td/>)\r\n                }\r\n            }\r\n            rows.push(<tr>{row}</tr>)\r\n        }\r\n        return (\r\n            <div>\r\n                {/*<div id=\"topBar\" onClick={this.handleClick}/>*/}\r\n                <div id=\"grid\">\r\n                    <table>\r\n                        <tbody>\r\n                            {rows}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Grid;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './css/App.css';\nimport Grid from './Grid';\nimport Module from \"./Module\";\n\nfunction App() {\n  return (\n    <Grid/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}